name: Build Feeds (current branch)
on:
  workflow_dispatch:
  schedule:
    - cron: "0 10 * * *"   # 10:00 UTC diario

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (current ref)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true
          ref: ${{ github.ref_name }}

      - name: Detect branch
        id: b
        run: echo "branch=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -V
          pip freeze | sed -n '1,60p'

      - name: Build feeds (fail if missing)
        run: |
          set -euo pipefail
          python scripts/build_feeds.py
          echo "=== LIST data ==="
          ls -la data
          for f in venezuela.xml panama.xml dominicana.xml; do
            test -s "data/$f" || (echo "::error::$f vacío o no existe" && exit 1)
            grep -q "<lastBuildDate>" "data/$f" || (echo "::error::$f sin <lastBuildDate>" && exit 1)
          done
          echo "=== HEAD XMLs ==="
          head -n 25 data/*.xml || true

      - name: Commit & push to current branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # fuerza añadir data/ incluso si .gitignore bloquea
          git add -A
          git add -f data/*.xml || true

          echo "=== STAGED FILES ==="
          git diff --cached --name-only || true

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Auto build feeds: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          git pull --rebase origin "${{ steps.b.outputs.branch }}" || true
          git push origin "HEAD:${{ steps.b.outputs.branch }}"
